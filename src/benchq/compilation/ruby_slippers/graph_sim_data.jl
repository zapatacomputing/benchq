################################################################################
# © Copyright 2022-2023 Zapata Computing Inc.
################################################################################
#=
This contains the data required to run the graph simulation algorithm.
These tables are used to speed up the graph simulation algorithm by memoizing
the results of certain small calculations which are performed repeatedly.
=#


# Contains all the information required to implement a gate in the ICM format.
struct ICMOp
    code::UInt8
    qubit1::Qubit
    qubit2::Qubit
    angle::Float64

    ICMOp(code, qubit) = new(code, qubit, 0, 0)
    ICMOp(code, qubit1, qubit2) = new(code, qubit1, qubit2, 0)
    ICMOp(code, qubit1, qubit2, angle) = new(code, qubit1, qubit2, angle)
end
RZOp(qubit1, angle) = ICMOp(RZ_code, qubit1, 0, angle)

"""Get qubit index of python operation"""
get_qubit_1(op) = pyconvert(Int, op.qubit_indices[0]) + 1 # +1 because Julia is 1-indexed
get_qubit_2(op) = pyconvert(Int, op.qubit_indices[1]) + 1

"""Get Python version of op_list of to speed up getting index"""
get_op_list() = pylist(["I", "S", "H", "N", "N", "N", "X", "Y", "Z", "CZ", "CNOT", "T", "T_Dagger", "RZ", "S_Dagger"])

"""Get index of operation name"""
get_op_index(op_list, op) = pyconvert(Int, op_list.index(op.gate.name)) + 1

pauli_op(index) = 1 <= index <= 4 # i.e. I, X, Y, Z
single_qubit_op(index) = 1 <= index <= 9   # Paulis, H, S, S_Dagger
double_qubit_op(index) = 10 <= index <= 11  # CZ, CNOT
non_clifford_op(index) = 12 <= index < 15 # T, T_Dagger, RX, RY, RZ
decompose_op(index) = index >= 15


function convert_orquestra_op_to_icm_ops(op, supported_ops=get_op_list())
    op_index = get_op_index(supported_ops, op)
    if single_qubit_op(op_index)
        return [ICMOp(op_index, get_qubit_1(op))]
    elseif double_qubit_op(op_index)
        return [ICMOp(op_index, get_qubit_1(op), get_qubit_2(op))]
    elseif non_clifford_op(op_index)
        if op_index == RZ_code
            return [RZOp(get_qubit_1(op), pyconvert(Float64, op.params[0]))]
        else # T or T_Dagger
            return [ICMOp(op_index, get_qubit_1(op))]
        end
    elseif decompose_op(op_index)
        if op_index == 15
            qubit = get_qubit_1(op)
            return [ICMOp(Z_code, qubit), ICMOp(S_code, qubit)]
        end
    else
        error("Unsupported gate: $(op.code)")
    end
end

# numbers which correspond to each of the gates in multiply_sqs
const I_code = UInt8(1)
const S_code = UInt8(2)
const H_code = UInt8(3)
const SQRT_X_code = UInt8(4)
const HSH_code = UInt8(4) # e^{iπ/4} X HSH = SHS
const SH_code = UInt8(5) # Apply H first, then S
const HS_code = UInt8(6) # Apply S first, then H

# Singe qubit Paulis
# external codes which must be distinct from the symplectic codes
const X_code = UInt8(7)
const Y_code = UInt8(8)
const Z_code = UInt8(9)

# Internal codes for the paulis. Allows for faster manipulation and simplifies debugging.
const I_code_internal = UInt8(1)
const X_code_internal = UInt8(2)
const Y_code_internal = UInt8(3)
const Z_code_internal = UInt8(4)

const external_to_internal_paulis = Dict(
    I_code => I_code, X_code => X_code_internal, Y_code => Y_code_internal, Z_code => Z_code_internal
)

# Two qubit gates
const CZ_code = UInt8(10)
const CNOT_code = UInt8(11)

# Gates that get decomposed
const T_code = UInt8(12)
const T_Dagger_code = UInt8(13)
const RZ_code = UInt8(14)
const non_clifford_gate_codes = [T_code, T_Dagger_code, RZ_code]

I_pauli_update = Dict(I_code => I_code, X_code_internal => X_code_internal, Y_code_internal => Y_code_internal, Z_code_internal => Z_code_internal)

X_pauli_update = Dict(I_code => X_code_internal, X_code_internal => I_code, Y_code_internal => Z_code_internal, Z_code_internal => Y_code_internal)
Y_pauli_update = Dict(I_code => Y_code_internal, X_code_internal => Z_code_internal, Y_code_internal => I_code, Z_code_internal => X_code_internal)
Z_pauli_update = Dict(I_code => Z_code_internal, X_code_internal => Y_code_internal, Y_code_internal => X_code_internal, Z_code_internal => I_code)

H_pauli_update = Dict(I_code => I_code, X_code_internal => Z_code_internal, Y_code_internal => Y_code_internal, Z_code_internal => X_code_internal)
S_pauli_update = Dict(I_code => I_code, X_code_internal => Y_code_internal, Y_code_internal => X_code_internal, Z_code_internal => Z_code_internal)
HS_pauli_update = Dict(I_code => I_code, X_code_internal => Z_code_internal, Y_code_internal => X_code_internal, Z_code_internal => Y_code_internal)
SH_pauli_update = Dict(I_code => I_code, X_code_internal => Y_code_internal, Y_code_internal => Z_code_internal, Z_code_internal => X_code_internal)
SQRT_X_pauli_update = Dict(I_code => I_code, X_code_internal => X_code_internal, Y_code_internal => Z_code_internal, Z_code_internal => Y_code_internal)

pauli_mult_table = Dict(I_code => I_pauli_update, X_code_internal => X_pauli_update, Y_code_internal => Y_pauli_update, Z_code_internal => Z_pauli_update)
clifford_pauli_update = Dict(I_code => I_pauli_update, S_code => S_pauli_update, H_code => H_pauli_update,
    SQRT_X_code => SQRT_X_pauli_update, SH_code => SH_pauli_update, HS_code => HS_pauli_update)

#=
Lookup table for the product of two single qubit symplectic operations.
The index of the table corresponds to the first single qubit symplectic operation and the
value of the table corresponds to the second single qubit symplectic operation. The value
of the table is the single qubit symplectic operation that is the product of the two
single qubit symplectic operations.
=#
const multiply_sqs = UInt8[
    I_code S_code H_code SQRT_X_code SH_code HS_code
    S_code I_code SH_code HS_code H_code SQRT_X_code
    H_code HS_code I_code SH_code SQRT_X_code S_code
    SQRT_X_code SH_code HS_code I_code S_code H_code
    SH_code SQRT_X_code S_code H_code HS_code I_code
    HS_code H_code SQRT_X_code S_code I_code SH_code
]

#=
Tables for multiplying paulis and conjugating paulis by symplectic operations
=#
const multiply_sqp = [
    1 2 3 4
    2 1 4 3
    3 4 1 2
    4 3 2 1
]

#=
Product of two local clifford operations:
   multiply_h & multiply_s store the results of multiplying h or s by the given value
   multiply_by_* store the results of multiplying the value by s (sqrt_z) or sqrt_x
   This is done by packing the row or column from the multiply_sqs table into a 32-bit
   unsigned integer, where each nibble is one of the values (all shifted up by 4 to avoid
   a shift at runtime.
=#

# H has no excess paulis!
function multiply_h_from_left(asg, pauli_tracker, node)
    # println("\nMultiplying h from left on qubit $(node)! the prepared graph state is:\n edge data   $(asg.edge_data)\n symplectics $(asg.sqs)\n pauli       $(asg.sqp)!")
    asg.sqp[node] = H_pauli_update[asg.sqp[node]]

    asg.sqs[node] = multiply_sqs[H_code, asg.sqs[node]]

    track_conditional_paulis_through_h(pauli_tracker.cond_paulis, node)
    # println("After multiplying h from left the prepared graph state is:\n edge data   $(asg.edge_data)\n symplectics $(asg.sqs)\n pauli       $(asg.sqp)!")
end

excess_pauli_S_left = [I_code, Z_code_internal, I_code, X_code_internal, Z_code_internal, X_code_internal]
function multiply_s_from_left(asg, pauli_tracker, node)
    conjugated_pauli = S_pauli_update[asg.sqp[node]]
    excess_pauli = excess_pauli_S_left[asg.sqs[node]]
    asg.sqp[node] = pauli_mult_table[conjugated_pauli][excess_pauli]

    asg.sqs[node] = multiply_sqs[S_code, asg.sqs[node]]

    track_conditional_paulis_through_s(pauli_tracker.cond_paulis, node)
end



# conj_Z_from_right = [Z_code_internal, Z_code_internal, X_code_internal, Y_code_internal, Y_code_internal, X_code_internal]
# excess_pauli_S_right = [I_code, Z_code_internal, I_code, Z_code_internal, X_code_internal, X_code_internal]
excess_pauli_S_right = [Z_code_internal, I_code, X_code_internal, X_code_internal, Z_code_internal, I_code]
function multiply_s_dagger_from_right(asg, node)
    # conjugated_pauli = conj_Z_from_right[asg.sqs[node]]
    # excess_pauli = excess_pauli_S_right[asg.sqs[node]]
    # total_added_pauli = pauli_mult_table[conjugated_pauli][excess_pauli]
    # asg.sqp[node] = pauli_mult_table[asg.sqp[node]][total_added_pauli]
    excess_pauli = excess_pauli_S_right[asg.sqs[node]]
    asg.sqp[node] = pauli_mult_table[asg.sqp[node]][excess_pauli]
    asg.sqs[node] = multiply_sqs[asg.sqs[node], S_code]
    # print("    conjugated_pauli: ", conjugated_pauli, "\n")
    # print("    excess_pauli: ", excess_pauli, "\n")
    # print("    total_added_pauli: ", total_added_pauli, "\n")
end

excess_pauli_SQRT_X_right = [I_code, X_code_internal, I_code, X_code_internal, Z_code_internal, Z_code_internal]
function multiply_sqrt_x_from_right(asg, node)
    excess_pauli = excess_pauli_SQRT_X_right[asg.sqs[node]]
    asg.sqp[node] = pauli_mult_table[asg.sqp[node]][excess_pauli]
    asg.sqs[node] = multiply_sqs[asg.sqs[node], SQRT_X_code]
end

#=
Table of states which result from applying CZ to all of the single qubit
Clifford gates acting on the basis states which are connected and disconnected
=#
const cz_table = [
    [
        (1, (I_code, I_code), (I_code, I_code)) (1, (Z_code_internal, I_code), (X_code_internal, I_code)) (1, (Z_code_internal, I_code), (Y_code_internal, I_code)) (1, (I_code, I_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (I_code, S_code)) (1, (Z_code_internal, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (Y_code_internal, S_code)) (1, (I_code, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (I_code, H_code)) (1, (I_code, I_code), (I_code, I_code)) (1, (I_code, I_code), (I_code, I_code)) (1, (I_code, I_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (I_code, H_code)) (1, (I_code, I_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (I_code, S_code)) (1, (I_code, I_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (I_code, S_code))
        (1, (X_code_internal, I_code), (Z_code_internal, I_code)) (1, (Y_code_internal, I_code), (Y_code_internal, I_code)) (1, (Y_code_internal, I_code), (X_code_internal, I_code)) (1, (X_code_internal, I_code), (I_code, I_code)) (1, (X_code_internal, I_code), (Z_code_internal, S_code)) (1, (Y_code_internal, I_code), (Y_code_internal, S_code)) (1, (Y_code_internal, I_code), (X_code_internal, S_code)) (1, (X_code_internal, I_code), (I_code, S_code)) (0, (X_code_internal, I_code), (I_code, H_code)) (0, (Y_code_internal, I_code), (X_code_internal, H_code)) (0, (Y_code_internal, I_code), (X_code_internal, H_code)) (0, (X_code_internal, I_code), (I_code, H_code)) (1, (X_code_internal, I_code), (Z_code_internal, I_code)) (1, (X_code_internal, I_code), (Z_code_internal, I_code)) (1, (X_code_internal, I_code), (I_code, I_code)) (1, (X_code_internal, I_code), (I_code, I_code)) (0, (X_code_internal, I_code), (I_code, H_code)) (0, (Y_code_internal, I_code), (X_code_internal, H_code)) (0, (Y_code_internal, I_code), (X_code_internal, H_code)) (0, (X_code_internal, I_code), (I_code, H_code)) (1, (X_code_internal, I_code), (I_code, S_code)) (1, (X_code_internal, I_code), (Z_code_internal, S_code)) (1, (X_code_internal, I_code), (I_code, S_code)) (1, (X_code_internal, I_code), (Z_code_internal, S_code))
        (1, (Y_code_internal, I_code), (Z_code_internal, I_code)) (1, (X_code_internal, I_code), (Y_code_internal, I_code)) (1, (X_code_internal, I_code), (X_code_internal, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (1, (Y_code_internal, I_code), (Z_code_internal, S_code)) (1, (X_code_internal, I_code), (Y_code_internal, S_code)) (1, (X_code_internal, I_code), (X_code_internal, S_code)) (1, (Y_code_internal, I_code), (I_code, S_code)) (0, (Y_code_internal, I_code), (I_code, H_code)) (0, (X_code_internal, I_code), (X_code_internal, H_code)) (0, (X_code_internal, I_code), (X_code_internal, H_code)) (0, (Y_code_internal, I_code), (I_code, H_code)) (1, (Y_code_internal, I_code), (Z_code_internal, I_code)) (1, (X_code_internal, I_code), (Y_code_internal, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (0, (Y_code_internal, I_code), (I_code, H_code)) (0, (X_code_internal, I_code), (X_code_internal, H_code)) (0, (X_code_internal, I_code), (X_code_internal, H_code)) (0, (Y_code_internal, I_code), (I_code, H_code)) (1, (Y_code_internal, I_code), (I_code, S_code)) (1, (X_code_internal, I_code), (X_code_internal, S_code)) (1, (Y_code_internal, I_code), (I_code, S_code)) (1, (X_code_internal, I_code), (X_code_internal, S_code))
        (1, (Z_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (X_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (1, (Z_code_internal, I_code), (Z_code_internal, I_code)) (1, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (I_code, I_code), (Y_code_internal, S_code)) (1, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (1, (Z_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (X_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (I_code, S_code))
        (1, (I_code, S_code), (I_code, I_code)) (1, (Z_code_internal, S_code), (X_code_internal, I_code)) (1, (Z_code_internal, S_code), (Y_code_internal, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (I_code, S_code)) (1, (Z_code_internal, S_code), (X_code_internal, S_code)) (1, (Z_code_internal, S_code), (Y_code_internal, S_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (I_code, H_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, S_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, S_code))
        (1, (X_code_internal, S_code), (Z_code_internal, I_code)) (1, (Y_code_internal, S_code), (Y_code_internal, I_code)) (1, (Y_code_internal, S_code), (X_code_internal, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (1, (X_code_internal, S_code), (Z_code_internal, S_code)) (1, (Y_code_internal, S_code), (Y_code_internal, S_code)) (1, (Y_code_internal, S_code), (X_code_internal, S_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (0, (Y_code_internal, S_code), (X_code_internal, H_code)) (0, (Y_code_internal, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (1, (X_code_internal, S_code), (Z_code_internal, I_code)) (1, (X_code_internal, S_code), (Z_code_internal, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (0, (Y_code_internal, S_code), (X_code_internal, H_code)) (0, (Y_code_internal, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, S_code), (Z_code_internal, S_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, S_code), (Z_code_internal, S_code))
        (1, (Y_code_internal, S_code), (Z_code_internal, I_code)) (1, (X_code_internal, S_code), (Y_code_internal, I_code)) (1, (X_code_internal, S_code), (X_code_internal, I_code)) (1, (Y_code_internal, S_code), (I_code, I_code)) (1, (Y_code_internal, S_code), (Z_code_internal, S_code)) (1, (X_code_internal, S_code), (Y_code_internal, S_code)) (1, (X_code_internal, S_code), (X_code_internal, S_code)) (1, (Y_code_internal, S_code), (I_code, S_code)) (0, (Y_code_internal, S_code), (I_code, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (Y_code_internal, S_code), (I_code, H_code)) (1, (Y_code_internal, S_code), (Z_code_internal, I_code)) (1, (X_code_internal, S_code), (Y_code_internal, I_code)) (1, (Y_code_internal, S_code), (I_code, I_code)) (1, (Y_code_internal, S_code), (I_code, I_code)) (0, (Y_code_internal, S_code), (I_code, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (Y_code_internal, S_code), (I_code, H_code)) (1, (Y_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, S_code), (X_code_internal, S_code)) (1, (Y_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, S_code), (X_code_internal, S_code))
        (1, (Z_code_internal, S_code), (I_code, I_code)) (1, (I_code, S_code), (X_code_internal, I_code)) (1, (I_code, S_code), (Y_code_internal, I_code)) (1, (Z_code_internal, S_code), (Z_code_internal, I_code)) (1, (Z_code_internal, S_code), (I_code, S_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (I_code, S_code), (Y_code_internal, S_code)) (1, (Z_code_internal, S_code), (Z_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (1, (Z_code_internal, S_code), (I_code, I_code)) (1, (I_code, S_code), (X_code_internal, I_code)) (1, (I_code, S_code), (Y_code_internal, I_code)) (1, (I_code, S_code), (Y_code_internal, I_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (Z_code_internal, S_code), (I_code, S_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (Z_code_internal, S_code), (I_code, S_code))
        (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (X_code_internal, I_code)) (0, (I_code, H_code), (Y_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (Y_code_internal, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code))
        (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Y_code_internal, I_code)) (0, (X_code_internal, H_code), (X_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (Y_code_internal, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code))
        (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Y_code_internal, I_code)) (0, (X_code_internal, H_code), (X_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (Y_code_internal, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code))
        (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (X_code_internal, I_code)) (0, (I_code, H_code), (Y_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (Y_code_internal, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code))
        (1, (I_code, I_code), (I_code, I_code)) (1, (Z_code_internal, I_code), (X_code_internal, I_code)) (1, (Z_code_internal, I_code), (Y_code_internal, I_code)) (1, (I_code, I_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (I_code, S_code)) (1, (Z_code_internal, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (Y_code_internal, S_code)) (1, (I_code, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (I_code, H_code)) (1, (I_code, I_code), (I_code, I_code)) (1, (I_code, I_code), (I_code, I_code)) (1, (X_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (I_code, H_code)) (1, (I_code, I_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (I_code, S_code)) (1, (X_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (I_code, S_code))
        (1, (I_code, I_code), (I_code, I_code)) (1, (Z_code_internal, I_code), (X_code_internal, I_code)) (1, (Y_code_internal, I_code), (X_code_internal, I_code)) (1, (X_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (I_code, S_code)) (1, (Z_code_internal, I_code), (X_code_internal, S_code)) (1, (Y_code_internal, I_code), (X_code_internal, S_code)) (1, (X_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (I_code, H_code)) (1, (I_code, I_code), (I_code, I_code)) (1, (I_code, I_code), (I_code, I_code)) (1, (I_code, I_code), (Z_code_internal, I_code)) (1, (X_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (I_code, H_code)) (1, (X_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (I_code, S_code)) (1, (I_code, I_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (I_code, S_code))
        (1, (Z_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (X_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (1, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (I_code, I_code), (Y_code_internal, S_code)) (1, (Y_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (1, (Z_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (X_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (I_code, S_code))
        (1, (Z_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (X_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (1, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (I_code, I_code), (Y_code_internal, S_code)) (1, (Y_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (1, (Z_code_internal, I_code), (I_code, I_code)) (1, (I_code, I_code), (X_code_internal, I_code)) (1, (I_code, I_code), (Y_code_internal, I_code)) (1, (Y_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (I_code, I_code), (X_code_internal, H_code)) (0, (Z_code_internal, I_code), (I_code, H_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (X_code_internal, S_code)) (1, (Z_code_internal, I_code), (I_code, S_code))
        (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (X_code_internal, I_code)) (0, (I_code, H_code), (Y_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (Y_code_internal, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code))
        (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Y_code_internal, I_code)) (0, (X_code_internal, H_code), (X_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (Y_code_internal, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code))
        (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Y_code_internal, I_code)) (0, (X_code_internal, H_code), (X_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (Y_code_internal, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (Z_code_internal, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (X_code_internal, H_code)) (0, (X_code_internal, H_code), (I_code, H_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (Z_code_internal, S_code)) (0, (X_code_internal, H_code), (I_code, S_code)) (0, (X_code_internal, H_code), (X_code_internal, S_code))
        (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (X_code_internal, I_code)) (0, (I_code, H_code), (Y_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (Y_code_internal, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (I_code, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (Z_code_internal, I_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (X_code_internal, H_code)) (0, (I_code, H_code), (I_code, H_code)) (0, (I_code, H_code), (X_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code)) (0, (I_code, H_code), (Z_code_internal, S_code)) (0, (I_code, H_code), (I_code, S_code))
        (1, (Z_code_internal, S_code), (I_code, I_code)) (1, (I_code, S_code), (X_code_internal, I_code)) (1, (I_code, S_code), (Y_code_internal, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (1, (Z_code_internal, S_code), (I_code, S_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (I_code, S_code), (Y_code_internal, S_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, I_code)) (1, (Z_code_internal, S_code), (I_code, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (Z_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (1, (Z_code_internal, S_code), (I_code, S_code))
        (1, (I_code, S_code), (I_code, I_code)) (1, (Z_code_internal, S_code), (X_code_internal, I_code)) (1, (X_code_internal, S_code), (X_code_internal, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (I_code, S_code)) (1, (Z_code_internal, S_code), (X_code_internal, S_code)) (1, (X_code_internal, S_code), (X_code_internal, S_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (I_code, H_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, S_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, S_code))
        (1, (Z_code_internal, S_code), (I_code, I_code)) (1, (I_code, S_code), (X_code_internal, I_code)) (1, (I_code, S_code), (Y_code_internal, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (1, (Z_code_internal, S_code), (I_code, S_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (I_code, S_code), (Y_code_internal, S_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (1, (Z_code_internal, S_code), (I_code, I_code)) (1, (I_code, S_code), (X_code_internal, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (1, (X_code_internal, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (X_code_internal, H_code)) (0, (Z_code_internal, S_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, S_code)) (1, (Z_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, S_code), (I_code, S_code)) (1, (Z_code_internal, S_code), (I_code, S_code))
        (1, (I_code, S_code), (I_code, I_code)) (1, (Z_code_internal, S_code), (X_code_internal, I_code)) (1, (X_code_internal, S_code), (X_code_internal, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (I_code, S_code)) (1, (Z_code_internal, S_code), (X_code_internal, S_code)) (1, (X_code_internal, S_code), (X_code_internal, S_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (X_code_internal, S_code), (X_code_internal, H_code)) (0, (I_code, S_code), (I_code, H_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, S_code)) (1, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, S_code))
    ],
    [
        (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (X_code_internal, I_code)) (0, (Z_code_internal, I_code), (Y_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (Y_code_internal, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (Z_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (Y_code_internal, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (0, (Z_code_internal, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, S_code))
        (0, (X_code_internal, I_code), (Z_code_internal, I_code)) (0, (Y_code_internal, I_code), (Y_code_internal, I_code)) (0, (Y_code_internal, I_code), (X_code_internal, I_code)) (0, (X_code_internal, I_code), (I_code, I_code)) (0, (X_code_internal, I_code), (Z_code_internal, S_code)) (0, (Y_code_internal, I_code), (Y_code_internal, S_code)) (0, (Y_code_internal, I_code), (X_code_internal, S_code)) (0, (X_code_internal, I_code), (I_code, S_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (1, (X_code_internal, S_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, H_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (Y_code_internal, S_code), (Z_code_internal, I_code)) (0, (Y_code_internal, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (Y_code_internal, I_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, SH_code)) (1, (Y_code_internal, I_code), (I_code, SH_code)) (0, (Y_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (Z_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (Y_code_internal, S_code), (X_code_internal, S_code))
        (0, (Y_code_internal, I_code), (Z_code_internal, I_code)) (0, (X_code_internal, I_code), (Y_code_internal, I_code)) (0, (X_code_internal, I_code), (X_code_internal, I_code)) (0, (Y_code_internal, I_code), (I_code, I_code)) (0, (Y_code_internal, I_code), (Z_code_internal, S_code)) (0, (X_code_internal, I_code), (Y_code_internal, S_code)) (0, (X_code_internal, I_code), (X_code_internal, S_code)) (0, (Y_code_internal, I_code), (I_code, S_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, H_code)) (1, (X_code_internal, S_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (0, (Y_code_internal, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (Y_code_internal, S_code), (I_code, I_code)) (1, (Y_code_internal, I_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (Y_code_internal, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (Y_code_internal, S_code), (Z_code_internal, S_code)) (0, (Y_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (X_code_internal, S_code))
        (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (X_code_internal, I_code)) (0, (I_code, I_code), (Y_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (Y_code_internal, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (I_code, I_code), (Y_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (Z_code_internal, I_code), (I_code, SH_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code))
        (0, (I_code, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (X_code_internal, I_code)) (0, (Z_code_internal, S_code), (Y_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (X_code_internal, S_code)) (0, (Z_code_internal, S_code), (Y_code_internal, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (Z_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (Y_code_internal, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code))
        (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (Y_code_internal, S_code), (Y_code_internal, I_code)) (0, (Y_code_internal, S_code), (X_code_internal, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, S_code)) (0, (Y_code_internal, S_code), (Y_code_internal, S_code)) (0, (Y_code_internal, S_code), (X_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (Y_code_internal, I_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, SH_code)) (1, (Y_code_internal, I_code), (I_code, SH_code)) (0, (Y_code_internal, I_code), (Z_code_internal, I_code)) (0, (X_code_internal, I_code), (Z_code_internal, I_code)) (0, (X_code_internal, I_code), (I_code, I_code)) (0, (Y_code_internal, I_code), (I_code, I_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, H_code)) (1, (X_code_internal, S_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (0, (X_code_internal, I_code), (I_code, S_code)) (0, (Y_code_internal, I_code), (Z_code_internal, S_code)) (0, (Y_code_internal, I_code), (I_code, S_code)) (0, (X_code_internal, I_code), (X_code_internal, S_code))
        (0, (Y_code_internal, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (Y_code_internal, I_code)) (0, (X_code_internal, S_code), (X_code_internal, I_code)) (0, (Y_code_internal, S_code), (I_code, I_code)) (0, (Y_code_internal, S_code), (Z_code_internal, S_code)) (0, (X_code_internal, S_code), (Y_code_internal, S_code)) (0, (X_code_internal, S_code), (X_code_internal, S_code)) (0, (Y_code_internal, S_code), (I_code, S_code)) (1, (Y_code_internal, I_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (Y_code_internal, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (0, (X_code_internal, I_code), (Z_code_internal, I_code)) (0, (Y_code_internal, I_code), (Z_code_internal, I_code)) (0, (Y_code_internal, I_code), (I_code, I_code)) (0, (X_code_internal, I_code), (I_code, I_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (1, (X_code_internal, S_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (X_code_internal, H_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (0, (Y_code_internal, I_code), (I_code, S_code)) (0, (X_code_internal, I_code), (Z_code_internal, S_code)) (0, (X_code_internal, I_code), (I_code, S_code)) (0, (Y_code_internal, I_code), (X_code_internal, S_code))
        (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (X_code_internal, I_code)) (0, (I_code, S_code), (Y_code_internal, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (Y_code_internal, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (I_code, I_code), (Y_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (Z_code_internal, I_code), (I_code, SH_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code))
        (1, (I_code, SH_code), (I_code, S_code)) (1, (I_code, H_code), (X_code_internal, I_code)) (1, (I_code, SH_code), (X_code_internal, S_code)) (1, (I_code, H_code), (I_code, I_code)) (1, (I_code, H_code), (Z_code_internal, S_code)) (1, (I_code, H_code), (X_code_internal, S_code)) (1, (I_code, H_code), (Y_code_internal, S_code)) (1, (I_code, H_code), (I_code, S_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code))
        (1, (X_code_internal, H_code), (I_code, I_code)) (1, (X_code_internal, SH_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (X_code_internal, I_code)) (1, (X_code_internal, SH_code), (I_code, S_code)) (1, (X_code_internal, H_code), (I_code, S_code)) (1, (Y_code_internal, H_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (X_code_internal, S_code)) (1, (Y_code_internal, H_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (I_code, I_code))
        (1, (X_code_internal, SH_code), (I_code, S_code)) (1, (X_code_internal, H_code), (X_code_internal, I_code)) (1, (X_code_internal, SH_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (I_code, I_code)) (1, (Y_code_internal, H_code), (I_code, S_code)) (1, (X_code_internal, H_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (Y_code_internal, S_code)) (1, (X_code_internal, H_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code))
        (1, (I_code, H_code), (I_code, I_code)) (1, (I_code, SH_code), (X_code_internal, S_code)) (1, (I_code, H_code), (X_code_internal, I_code)) (1, (I_code, SH_code), (I_code, S_code)) (1, (I_code, H_code), (I_code, S_code)) (1, (I_code, H_code), (Y_code_internal, S_code)) (1, (I_code, H_code), (X_code_internal, S_code)) (1, (Z_code_internal, H_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code))
        (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (Y_code_internal, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Y_code_internal, I_code)) (0, (Z_code_internal, I_code), (X_code_internal, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (X_code_internal, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (Z_code_internal, SH_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code))
        (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (Y_code_internal, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (X_code_internal, I_code)) (0, (Z_code_internal, I_code), (Y_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (Z_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (I_code, H_code))
        (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (Y_code_internal, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (X_code_internal, I_code)) (0, (I_code, I_code), (Y_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (X_code_internal, S_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (I_code, I_code), (Z_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, SH_code))
        (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (Y_code_internal, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Y_code_internal, I_code)) (0, (I_code, I_code), (X_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (1, (Z_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, H_code))
        (1, (I_code, H_code), (Z_code_internal, S_code)) (1, (I_code, H_code), (X_code_internal, S_code)) (1, (I_code, H_code), (Y_code_internal, S_code)) (1, (I_code, H_code), (I_code, S_code)) (1, (I_code, H_code), (I_code, I_code)) (1, (I_code, SH_code), (X_code_internal, S_code)) (1, (I_code, H_code), (X_code_internal, I_code)) (1, (I_code, SH_code), (I_code, S_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (X_code_internal, S_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code))
        (1, (X_code_internal, H_code), (I_code, S_code)) (1, (Y_code_internal, H_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (X_code_internal, S_code)) (1, (Y_code_internal, H_code), (I_code, S_code)) (1, (X_code_internal, SH_code), (I_code, S_code)) (1, (X_code_internal, H_code), (X_code_internal, I_code)) (1, (X_code_internal, SH_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (I_code, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (X_code_internal, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code))
        (1, (Y_code_internal, H_code), (I_code, S_code)) (1, (X_code_internal, H_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (Y_code_internal, S_code)) (1, (X_code_internal, H_code), (I_code, S_code)) (1, (X_code_internal, H_code), (I_code, I_code)) (1, (X_code_internal, SH_code), (X_code_internal, S_code)) (1, (X_code_internal, H_code), (X_code_internal, I_code)) (1, (X_code_internal, SH_code), (I_code, S_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code))
        (1, (I_code, H_code), (I_code, S_code)) (1, (I_code, H_code), (Y_code_internal, S_code)) (1, (I_code, H_code), (X_code_internal, S_code)) (1, (Z_code_internal, H_code), (I_code, S_code)) (1, (I_code, SH_code), (I_code, S_code)) (1, (I_code, H_code), (X_code_internal, I_code)) (1, (I_code, SH_code), (X_code_internal, S_code)) (1, (I_code, H_code), (I_code, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code))
        (0, (X_code_internal, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (Y_code_internal, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (X_code_internal, S_code), (I_code, S_code)) (0, (X_code_internal, S_code), (I_code, I_code)) (0, (I_code, S_code), (X_code_internal, I_code)) (0, (I_code, S_code), (Y_code_internal, I_code)) (0, (X_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (Z_code_internal, SH_code))
        (0, (I_code, S_code), (I_code, S_code)) (0, (Z_code_internal, S_code), (X_code_internal, S_code)) (0, (Z_code_internal, S_code), (Y_code_internal, S_code)) (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, S_code), (Y_code_internal, I_code)) (0, (Z_code_internal, S_code), (X_code_internal, I_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (I_code, I_code), (Z_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, H_code)) (1, (I_code, S_code), (X_code_internal, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (Z_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code))
        (0, (Z_code_internal, S_code), (I_code, S_code)) (0, (I_code, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (Y_code_internal, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, S_code)) (0, (Z_code_internal, S_code), (Z_code_internal, I_code)) (0, (I_code, S_code), (Y_code_internal, I_code)) (0, (I_code, S_code), (X_code_internal, I_code)) (0, (Z_code_internal, S_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, SH_code)) (1, (I_code, I_code), (Z_code_internal, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code))
        (0, (I_code, S_code), (Z_code_internal, S_code)) (0, (X_code_internal, S_code), (Y_code_internal, S_code)) (0, (X_code_internal, S_code), (X_code_internal, S_code)) (0, (I_code, S_code), (I_code, S_code)) (0, (I_code, S_code), (I_code, I_code)) (0, (X_code_internal, S_code), (X_code_internal, I_code)) (0, (X_code_internal, S_code), (Y_code_internal, I_code)) (0, (I_code, S_code), (Z_code_internal, I_code)) (0, (Z_code_internal, I_code), (I_code, S_code)) (0, (I_code, I_code), (X_code_internal, S_code)) (0, (I_code, I_code), (I_code, S_code)) (0, (Z_code_internal, I_code), (Z_code_internal, S_code)) (1, (X_code_internal, S_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, H_code)) (1, (I_code, S_code), (I_code, SH_code)) (1, (X_code_internal, I_code), (I_code, H_code)) (0, (Z_code_internal, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (Z_code_internal, I_code)) (0, (I_code, I_code), (I_code, I_code)) (0, (Z_code_internal, I_code), (I_code, I_code)) (1, (Z_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (X_code_internal, SH_code)) (1, (X_code_internal, I_code), (I_code, SH_code)) (1, (I_code, I_code), (I_code, SH_code))
    ]
]
